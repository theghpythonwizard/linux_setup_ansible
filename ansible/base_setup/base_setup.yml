---
 - hosts: all
   gather_facts: false
   tasks:
      - name: set ip address
        set_fact:
          ansible_host: "{{ ipv4_address }}"
        delegate_to: localhost

      - name: print ansible_host
        debug:
          msg: "{{ ansible_host }}"
      
      - name: set _upgrade if not already set
        set_fact:
          _upgrade: 'false'
        when: '_upgrade is not defined'

      - name: check if /etc/sudoers.d/init-users exists
        stat:
          path: /etc/sudoers.d/init-users
        register: init_users_exists

      - name: create /etc/sudoers.d/init-users if not exists
        become: yes
        become_user: root
        file:
          path: /etc/sudoers.d/init-users
          state: touch
          mode: '0644'
        when: init_users_exists.stat.exists == false

      - name: get contents of /etc/sudoers.d/init-users
        become: yes
        shell: cat /etc/sudoers.d/init-users
        register: sudoers_file_content

      - name: print content of /etc/sudoers.d/init-users
        debug:
          var: sudoers_file_content

      - name: set sudo user
        become: yes
        become_user: root
        shell: echo "jasschul ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/init-users
        when: '"jasschul" not in sudoers_file_content.stdout or sudoers_file_content is not defined'

      - name: chown /home/jasschul to bypass sudo
        file: 
          path: /home/jasschul
          owner: jasschul
          group: jasschul
        become: yes

      - name: update and install packages
        become: yes
        apt:
          pkg:
            - git
            - curl
            - wget
            - apt-transport-https
            - software-properties-common
            - net-tools
          update_cache: yes

      - name: system upgrade
        become: yes
        apt:
          upgrade: yes
        when: '_upgrade is defined and _upgrade == "true"'

      - name: download Microsoft repository GPG keys
        shell: "wget -q https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O /tmp/packages-microsoft-prod.deb"

      - name: Register the Microsoft repository GPG keys
        become: yes
        shell: "dpkg -i /tmp/packages-microsoft-prod.deb"

      - name: update repository and install dependencies
        become: yes
        shell: |
          apt update
          apt install powershell -y

      - name: set platform variable
        shell: "uname -r"
        register: platform
        delegate_to: localhost
        
      - name: print platform
        debug:
          var: platform.stdout
        delegate_to: localhost

      - name: check hosts file for entry in wsl
        block:
          - name: check hosts file for entry
            shell: "cat /mnt/c/windows/system32/drivers/etc/hosts | grep '{{ ansible_host }}'"
            register: hosts_file_contents
            when: '"WSL" in platform.stdout'
            delegate_to: localhost
            ignore_errors: true
        rescue:
          - name: check hosts file for entry
            shell: "cat /etc/hosts | grep '{{ ansible_host }}'"
            register: hosts_file_contents
            when: '"WSL" not in platform.stdout'
            delegate_to: localhost
            ignore_errors: true
        rescue:
          - name: print message if host not found
            debug:
              msg: "{{ ansible_host }} not found in /mnt/c/windows/system32/drivers/etc/hosts"
            delegate_to: localhost

      - name: set dns name on localhost if wsl and not already set
        shell: echo "{{ ipv4_address }} {{ inventory_hostname }}" >> /mnt/c/windows/system32/drivers/etc/hosts
        when: 
          - '"WSL" in platform.stdout'
          - hosts_file_contents is not defined or ansible_host not in hosts_file_contents.stdout
        delegate_to: localhost

      - name: set dns name on localhost if not wsl and not already set
        shell: echo "{{ ipv4_address }} {{ inventory_hostname }}" >> /etc/hosts
        when: 
          - '"WSL" not in platform.stdout'
          - hosts_file_contents is not defined or ansible_host not in hosts_file_contents.stdout
        delegate_to: localhost


        
